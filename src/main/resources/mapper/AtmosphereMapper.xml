<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ydsw.dao.AtmosphereMapper">

    <resultMap id="BaseResultMap" type="com.ydsw.domain.Atmosphere">
        <id property="id" column="id" />
        <result property="deviceId" column="device_id" />
        <result property="windSpeed" column="wind_speed" />
        <result property="rainfall" column="rainfall" />
        <result property="atmosphereTemperature" column="atmosphere_temperature" />
        <result property="soilTemperature" column="soil_temperature" />
        <result property="digitalPressure" column="digital_pressure" />
        <result property="simpleTotalRadiation" column="simple_total_radiation" />
        <result property="windDirection" column="wind_direction" />
        <result property="soilHumidity" column="soil_humidity" />
        <result property="atmosphereHumidity" column="atmosphere_humidity" />
        <result property="pm25" column="pm25" />
        <result property="salinity" column="salinity" />
        <result property="negativeOxygenIon" column="negative_oxygen_ion" />
        <result property="rainfallAccumulation" column="rainfall_accumulation" />
        <result property="radiationAccumulation" column="radiation_accumulation" />
        <result property="pm10" column="pm10" />
        <result property="observationTime" column="observation_time" />
        <result property="createTime" column="create_time" />
        <result property="type" column="type" />
        <result property="userName" column="user_name" />
        <result property="filepath" column="filepath" />
        <result property="filename" column="filename" />
        <result property="createUserid" column="create_userid" />
        <result property="status" column="status" />
        <result property="contactPhone" column="contact_phone" />
        <result property="contactAddress" column="contact_address" />
        <result property="productionUnit" column="production_unit" />
        <result property="contactEmail" column="contact_email" />
        <result property="open" column="open" />
        <result property="dataIntroduction" column="data_introduction" />
    </resultMap>

    <sql id="Base_Column_List">
        id,device_id,wind_speed,rainfall,atmosphere_temperature,soil_temperature,
        digital_pressure,simple_total_radiation,wind_direction,soil_humidity,atmosphere_humidity,
        pm25,salinity,negative_oxygen_ion,rainfall_accumulation,radiation_accumulation,
        pm10,observation_time,create_time,type,user_name,
        filepath,filename,create_userid,status,contact_phone,
        contact_address,production_unit,contact_email,open,data_introduction
    </sql>
    <select id="fetchFilepathByObservationTimeAndClassName" resultType="java.util.Map">
        select  min(observation_time) as "observationTimeBegin",max(observation_time) as "observationTimeEnd",
                  filepath,filename,min(id) as id from ${className}
        <where>
            <if test="idList != null and idList.size()>0">
                and id in
                <foreach collection="idList" open="(" close=")" item="item" separator="," index="index">
                    #{item}
                </foreach>
            </if>
            <if test="filepath != null and filepath.trim() !=''">
                AND  filename LIKE CONCAT('%', #{filepath},'%')
            </if>
            <if test="observationTimeBegin != null and observationTimeBegin.trim() !='' and observationTimeEnd!= null and observationTimeEnd.trim() !=''">
                AND  observation_time between #{observationTimeBegin} and #{observationTimeEnd}
            </if>
            <if test="type != null and type.trim() !=''">
                AND  `type` LIKE CONCAT('%', #{type},'%')
            </if>
            <if test="typeDetail != null and typeDetail.trim() !=''">
                AND  type_detail LIKE CONCAT('%', #{typeDetail},'%')
            </if>
            <if test="deviceId != null and deviceId.trim() !=''">
                AND  device_id LIKE CONCAT('%', #{deviceId},'%')
            </if>
            <if test="deviceName != null and deviceName.trim() !=''">
                AND  device_name LIKE CONCAT('%', #{deviceName},'%')
            </if>
            and status = 0
        </where>
        group by filename,filepath
        order by filename,filepath

    </select>

    <update id="deleteById" >
        update atmosphere set status = 1
        <where>
            <if test="idList != null and idList.size()>0">
                and id in
                <foreach collection="idList" open="(" close=")" item="item" separator="," index="index">
                    #{item}
                </foreach>
            </if>
            <if test="dateSelected != null and dateSelected.trim() !=''">
                AND  observation_time LIKE CONCAT('%', #{dateSelected},'%')
            </if>
            <if test="filepath != null and filepath.trim() !=''">
                AND  filename LIKE CONCAT('%', #{filepath},'%')
            </if>
            <if test="deviceId != null and deviceId.trim() != ''">
                AND device_id = #{deviceId}
            </if>
            and status=0
        </where>
    </update>
    <update id="updateOpenStatusByFilepathsAndDate">
        UPDATE atmosphere
        SET open = #{openValue}
        <where>
            <if test="idList != null and idList.size()>0">
                and id in
                <foreach collection="idList" open="(" close=")" item="item" separator="," index="index">
                    #{item}
                </foreach>
            </if>
            <if test="dateSelected != null and dateSelected.trim() !=''">
                AND  observation_time LIKE CONCAT('%', #{dateSelected},'%')
            </if>
            <if test="filepath != null and filepath.trim() !=''">
                AND  filename LIKE CONCAT('%', #{filepath},'%')
            </if>
            and status=0
        </where>
    </update>

    <select id="selectByTimeAndDevice" resultType="com.ydsw.domain.Atmosphere">
        SELECT * FROM atmosphere
        <where>
            <if test="time != null and time.trim() != ''">
                and observation_time LIKE CONCAT('%',#{time},'%')
            </if>
            <if test="device != null and device.trim() != ''">
                AND device_id = #{device}
            </if>
            AND status=0
        </where>
        order by observation_time;
    </select>

    <select id="selectObservationTime" resultType="java.lang.String">
        SELECT DISTINCT  observation_time  FROM atmosphere;
    </select>
    <select id="findCurrentAtmosphereByDevice" resultType="com.ydsw.domain.Atmosphere"
            parameterType="java.lang.String">
        SELECT *  FROM atmosphere
                  <where>
                      <if test="time != null and time.trim() != ''">
                          and observation_time LIKE CONCAT('%',#{time},'%')
                      </if>
                      <if test="device != null and device.trim() != ''">
                          AND device_id = #{device}
                      </if>
                  and status=0
                  </where>
                ORDER BY observation_time DESC LIMIT 1;
    </select>

    <select id="getAtmosphereDatasPage" resultType="java.util.Map">
        SELECT id,device_id as "deviceId", wind_speed as "windSpeed",
        rainfall,atmosphere_temperature as "atmosphereTemperature",
        soil_temperature as "soilTemperature",
        digital_pressure as "digitalPressure",simple_total_radiation as "simpleTotalRadiation",
        wind_direction as "windDirection",
        soil_humidity as "soilHumidity",atmosphere_humidity as "atmosphereHumidity",pm25,
        salinity,negative_oxygen_ion as "negativeOxygenIon",
        rainfall_accumulation as "rainfallAccumulation",
        radiation_accumulation as "radiationAccumulation",pm10,
        observation_time as "observationTime",
        filename as "filepath"
        FROM atmosphere
        <where>
            <if test="atmosphereClass.observationTime != null and atmosphereClass.observationTime.trim() != ''">
                and observation_time LIKE CONCAT('%', #{atmosphereClass.observationTime}, '%')
            </if>
            <if test="atmosphereClass.filepath!=null and atmosphereClass.filepath.trim()!=''">
                and filename  LIKE CONCAT('%',#{atmosphereClass.filepath},'%')
            </if>
            <if test="atmosphereClass.deviceId != null">
                AND device_id = #{atmosphereClass.deviceId}
            </if>
            AND status=0
        </where>
        order by observation_time
    </select>
    <select id="findDataPageByCondition" resultType="java.util.Map">
        SELECT
        group_concat( atmosphere.id ORDER BY atmosphere.filename SEPARATOR ',' ) AS id,
        atmosphere.observation_time AS "observationTime",
        atmosphere.filename as filename,
        atmosphere.data_introduction AS "dataIntroduction" ,
        atmosphere.user_name AS "userName" ,
        atmosphere.contact_phone AS "contactPhone" ,
        atmosphere.production_unit AS "productionUnit",
        atmosphere.open
        FROM atmosphere
        <where>
            <if test="time != null and time.trim() !=''">
                AND  observation_time LIKE CONCAT('%', #{time},'%')
            </if>
            <if test="filepath != null and filepath.trim() !=''">
                AND  filename LIKE CONCAT('%', #{filepath},'%')
            </if>
            <if test="opens != null">
                AND  open=#{opens}
            </if>
            and atmosphere.filename IS NOT NULL and atmosphere.status=0
        </where>
        GROUP BY
        atmosphere.filename,
        atmosphere.data_introduction,
        atmosphere.user_name ,
        atmosphere.contact_phone,
        atmosphere.production_unit,
        atmosphere.observation_time,
        atmosphere.open
    </select>
    <select id="fetchObservationTimeByYear" resultType="java.lang.String">
        SELECT DISTINCT LEFT(observation_time, 4) FROM atmosphere where status=0
    </select>
    <select id="fetchObservationTimeByMonth" resultType="java.lang.String">
        SELECT DISTINCT LEFT(observation_time, 7) FROM atmosphere where status=0
    </select>
</mapper>

